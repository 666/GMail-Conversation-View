<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>

<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1/GPL 2.0/LGPL 2.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is Thunderbird multiple message summary pane.
   -
   - The Initial Developer of the Original Code is
   - Mozilla Messaging.
   - Portions created by the Initial Developer are Copyright (C) 2009
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s):
   -   David Ascher <dascher@mozillamessaging.com>
   -   Jonathan Protzenko <jonathan.protzenko@gmail.com>
   -
   - Alternatively, the contents of this file may be used under the terms of
   - either the GNU General Public License Version 2 or later (the "GPL"), or
   - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   - in which case the provisions of the GPL or the LGPL are applicable instead
   - of those above. If you wish to allow use of your version of this file only
   - under the terms of either the GPL or the LGPL, and not to allow others to
   - use your version of this file under the terms of the MPL, indicate your
   - decision by deleting the provisions above and replace them with the notice
   - and other provisions required by the LGPL or the GPL. If you do not delete
   - the provisions above, a recipient may use your version of this file under
   - the terms of any one of the MPL, the GPL or the LGPL.
   -
   - ***** END LICENSE BLOCK ***** -->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
                      "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"
  [
  <!ENTITY % brandDTD SYSTEM "chrome://branding/locale/brand.dtd">
  %brandDTD;
  <!ENTITY % globalDTD SYSTEM "chrome://global/locale/global.dtd">
  %globalDTD;
  <!ENTITY % startDTD SYSTEM "chrome://messenger/locale/multimessageview.dtd">
  %startDTD;
  <!ENTITY % gconversationDTD SYSTEM "chrome://gconversation/locale/multimessageview.dtd">
  %gconversationDTD;
  <!ENTITY % errorDTD SYSTEM "chrome://gconversation/locale/error.dtd">
  %errorDTD;
  ]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
    <head>
        <link rel="stylesheet" media="screen" type="text/css"
              href="chrome://messenger/skin/messageHeader.css"/>
        <link rel="stylesheet" media="screen" type="text/css"
              href="chrome://messenger/skin/multimessageview.css"/>
        <link rel="stylesheet" media="screen" type="text/css"
              href="chrome://messenger/skin/tagColors.css"/>
        <link rel="stylesheet" media="screen" type="text/css"
              href="chrome://gconversation/skin/multimessageview.css"/>
        <link rel="stylesheet" media="screen" type="text/css"
              id="platformStylesheet" />
        <title>&window.title;</title>
        <script type="application/javascript;version=1.8"><![CDATA[
            function addPlatformStyle() {
              let styleElt = document.getElementById("platformStylesheet");
              switch (navigator.platform) {
                case "Win32":
                  styleElt.setAttribute("href", "chrome://gconversation/skin/win.css");
                  break;
                case "MacPPC":
                case "MacIntel":
                  styleElt.setAttribute("href", "chrome://gconversation/skin/mac.css");
                  break;
                case "Linux i686":
                default:
                  styleElt.setAttribute("href", "chrome://gconversation/skin/linux.css");
                  break;
              }
            }

            Components.utils.import("resource://app/modules/errUtils.js");
            Components.utils.import("resource://gconversation/VariousUtils.jsm");

            const Ci = Components.interfaces;
            const Cc = Components.classes;
            const stringBundle = window.top.document.getElementById("gconv-string-bundle");
            const prefsService = Cc["@mozilla.org/preferences-service;1"].getService(Ci.nsIPrefService);
            let buttonBranch = prefsService.getBranch("gconversation.button.");
            let prefsBranch = prefsService.getBranch("gconversation.");

            let myPrefObserver = {
              register: function () {
                buttonBranch.QueryInterface(Components.interfaces.nsIPrefBranch2);
                buttonBranch.addObserver("", this, false);
              },

              unregister: function () {
                if (!buttonBranch) return;
                  buttonBranch.removeObserver("", this);
              },

              observe: function (aSubject, aTopic, aData) {
                if (aTopic != "nsPref:changed") return;
                if (buttonBranch.getBoolPref(aData))
                  document.getElementById(aData).style.display = "";
                else
                  document.getElementById(aData).style.display = "none";
              }
            };
            myPrefObserver.register();


            function adjustHeadingSize() {
              let content = document.getElementById('content');
              let heading = document.getElementById('heading');
              let buttonbox = document.getElementById('buttonbox');
              content.style.top = Math.max(
                buttonbox.getBoundingClientRect().height,
                heading.getBoundingClientRect().height) + 'px';
            }

            function hookResize() {
              // we need to hook into the resize event on the header to make the #content
              // node shift down as it reflows.
              window.addEventListener('resize', adjustHeadingSize, false);
            }

            function customizeToolbar() {
              for each (let l in ["archive", "trash", "collapse_all", "expand_all", "mark_as_read", "print", "back"])
                if (!buttonBranch.getBoolPref(l))
                  document.getElementById(l).style.display = "none";
              /* That pref is watched from selectionsummaries.js so
                 as not that register a ton of observers here.
                 selectionsummaries.js takes care of toggling the class for us */
              if (prefsBranch.getBoolPref("toolbar_text_plus_icons")) {
                let bb = document.getElementById("buttonhbox");
                bb.setAttribute("class", bb.getAttribute("class")+" text-plus-icons");
              }
            }

            let showquotedtext = stringBundle.getString("showquotedtext");
            let hidequotedtext = stringBundle.getString("hidequotedtext");
            function toggleQuote(event) {
              let link = event.target;
              let div = link.nextSibling;
              let cs = window.getComputedStyle(div, null);
              if (div.style.display == "none") {
                link.textContent = "- "+hidequotedtext+" -";
                div.style.display = "";
                let h = div.getBoundingClientRect().height +
                  parseInt(cs.marginTop) + parseInt(cs.marginBottom);
                return h;
              } else {
                let h = div.getBoundingClientRect().height;
                h += parseInt(cs.marginTop);
                h += parseInt(cs.marginBottom);
                link.textContent = "- "+showquotedtext+" -";
                div.style.display = "none";
                return -h;
              }
            }

            function disableExtraButtons() {
              [x.setAttribute("disabled", "true") for each ([,x] in Iterator(document.getElementsByClassName("extra-button")))];
              [x.setAttribute("disabled", "true") for each ([,x] in Iterator(window.top.document.getElementById("gConvMenu").getElementsByClassName("extra-menuitem")))];
            }

            function enableExtraButtons() {
              [x.setAttribute("disabled", "false") for each ([,x] in Iterator(document.getElementsByClassName("extra-button")))];
              [x.setAttribute("disabled", "false") for each ([,x] in Iterator(window.top.document.getElementById("gConvMenu").getElementsByClassName("extra-menuitem")))];
            }

            function errorEmptyCollection() {
              document.getElementById("error_gloda_disabled").style.display = "none";
              document.getElementById("error_empty_collection").style.display = "";
            }

            function errorGlodaDisabled() {
              document.getElementById("error_empty_collection").style.display = "none";
              document.getElementById("error_gloda_disabled").style.display = "";
            }

            function disableErrorEmptyCollection() {
              prefsBranch.setBoolPref("disable_error_empty_collection", true);
            }
        ]]>
        </script>
    </head>
<body onload="hookResize(); customizeToolbar(); addPlatformStyle();">
    <div id="headingwrappertable">
        <div id="headingwrapper">
            <div id="buttonbox"
                 xmlns:html="http://www.w3.org/1999/xhtml"
                 xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
                <hbox id="buttonhbox" align="start">
                    <button id="back"
                            class="button msgHeaderView-button extra-button"
                            label="&button.back;"
                            tooltiptext="&button.back;"
                            onclick="if (event.button == 0) window.top.gconversation.on_back();"/>
                    <button id="open_in_new_tab"
                            class="button msgHeaderView-button extra-button"
                            label="&button.open_in_new_tab;"
                            tooltiptext="&button.open_in_new_tab;"
                            onclick="if (event.button == 0) window.top.gconversation.on_load_thread_tab(event);"/>
                    <button id="mark_as_read"
                            class="button msgHeaderView-button extra-button"
                            label="&button.mark_all_read;"
                            tooltiptext="&button.mark_all_read;"
                            onclick="if (event.button == 0) window.top.gconversation.mark_all_read()"/>
                    <button id="expand_all"
                            class="button msgHeaderView-button extra-button"
                            onclick="if (event.button == 0) window.top.gconversation.on_expand_all()"
                            label="&button.expand_all;"
                            tooltiptext="&button.expand_all;" />
                    <button id="collapse_all"
                            class="button msgHeaderView-button extra-button"
                            onclick="if (event.button == 0) window.top.gconversation.on_collapse_all()"
                            label="&button.collapse_all;"
                            tooltiptext="&button.collapse_all;" />
                    <button id="print"
                            class="button msgHeaderView-button extra-button"
                            label="&button.print;"
                            tooltiptext="&button.print;"
                            onclick="if (event.button == 0) window.top.gconversation.print();"/>
                    <button id="archive"
                            class="button msgHeaderView-button hdrArchiveButton"
                            onclick="if (event.button == 0) window.top.gconversation.archive_all();"
                            label="&archive.label;"
                            tooltiptext="&archive.label;"/>
                    <button id="trash"
                            class="button msgHeaderView-button hdrTrashButton"
                            label="&delete.label;"
                            tooltiptext="&delete.label;"
                            onclick="if (event.button == 0) window.top.gconversation.delete_all();"/>
                </hbox>
            </div>
            <div class="heading" id="heading">&selectedmessages.label;</div>
        </div>
    </div>
    <div id="error_empty_collection" class="error" style="display: none">
      <h3>&error.title;</h3>
      &error_empty_collection;
      <p><a href="mailto:jonathan.protzenko+gconversation@gmail.com">&error.help;</a></p>
      <p class="close">
        <span onclick="disableErrorEmptyCollection(); this.parentNode.parentNode.style.display = 'none';">&error.disable;</span>
        -
        <span onclick="this.parentNode.parentNode.style.display = 'none';">&error.close;</span>
      </p>
    </div>
    <div id="error_gloda_disabled" class="error" style="display: none">
      <h3>&error.title;</h3>
      &error_gloda_disabled;
      <p><a href="mailto:jonathan.protzenko+gconversation@gmail.com">&error.help;</a></p>
      <p class="close">
        <span onclick="this.parentNode.parentNode.style.display = 'none';">&error.close;</span>
      </p>
    </div>
    <div id="content">
        <div id="messagelist"/>
        <div class="notice">
            <span class="info" id="size"></span> <span class="info" id="notice"></span>
        </div>
    </div>
</body>
</html>
